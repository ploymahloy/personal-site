import Head from 'next/head';
import Default from '../layouts/Default';

import styles from '../styles/Projects.module.scss';

export default function Projects() {
	const imgUrl =
		'https://images.pexels.com/photos/3183150/pexels-photo-3183150.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2';

	return (
		<>
			<Head>
				<title>Projects</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.png" />
			</Head>

			<Default>
				<div className={styles.wrapper}>
					<header className={styles.page_title}>Projects</header>
					<div className={styles.row}>
						<div className={styles.project_summary_wrapper}>
							<fieldset className={styles.fieldset}>
								<legend className={styles.legend_project}>
									All Access Clone
								</legend>
								<p className={styles.project_summary}>
									This project was inspired by a web app I support for my
									current role. I wanted a bigger project to work on so I
									challenged myself to recreate it while also hoping to improve
									some of the quirks of the original UI. The technologies used
									for this project are:{' '}
									<p className={styles.project_summary_bold}>NextJS, Sass</p>
								</p>
								<div className={styles.button_wrapper}>
									<button className={styles.button}>
										<a href="" target="_blank">
											Demo
										</a>
									</button>
									<button className={styles.button}>
										<a href="" target="_blank">
											Source
										</a>
									</button>
								</div>
							</fieldset>
						</div>
					</div>
					<div className={styles.row}>
						<div className={styles.project_summary_wrapper}>
							<fieldset className={styles.fieldset}>
								<legend className={styles.legend_project}>
									Project Organizer
								</legend>
								<p className={styles.project_summary}>
									This web app is meant to assist users of a project-based
									company better organize their projects by deadline and job
									type. Users are also able to add new work orders as well. The
									technologies used for this project are:{' '}
									<p className={styles.project_summary_bold}>
										React, Bootstrap
									</p>
								</p>
								<div className={styles.button_wrapper}>
									<button className={styles.button}>
										<a href="https://ploymahloy.github.io/project-organizer/" target="_blank">
											Demo
										</a>
									</button>
									<button className={styles.button}>
										<a href="https://github.com/ploymahloy/project-organizer" target="_blank">
											Source
										</a>
									</button>
								</div>
							</fieldset>
						</div>
					</div>
					<div className={styles.row}>
						<div className={styles.project_summary_wrapper}>
							<fieldset className={styles.fieldset}>
								<legend className={styles.legend_project}>
									Mortgage Calculator
								</legend>
								<p className={styles.project_summary}>
									A very straightforward web app designed to calculate monthly
									mortgage payments based on data input by the user. The
									technologies used for this project are:{' '}
									<p className={styles.project_summary_bold}>React</p>
								</p>
								<div className={styles.button_wrapper}>
									<button className={styles.button}>
										<a href="https://ploymahloy.github.io/mortgage-calculator/" target="_blank">
											Demo
										</a>
									</button>
									<button className={styles.button}>
										<a href="https://github.com/ploymahloy/mortgage-calculator" target="_blank">
											Source
										</a>
									</button>
								</div>
							</fieldset>
						</div>
					</div>
					<div className={styles.row}>
						<div className={styles.project_summary_wrapper}>
							<fieldset className={styles.fieldset}>
								<legend className={styles.legend_project}>
									Dictionary App
								</legend>
								<p className={styles.project_summary}>
									This project was inspired by a web app I support for my
									current role. I find it do be antiquated, and I wanted a
									bigger project to work on so I challenged myself to recreate
									it (minus the myriad bugs and quirks). My challenge was
									learning how to x, y, z. I overcame these challenges by
									implementing 1, 2, 3. The technologies used for this project
									are:{' '}
									<p className={styles.project_summary_bold}>
										React Typescript
									</p>
								</p>
								<div className={styles.button_wrapper}>
									<button className={styles.button}>
										<a
											href="https://ploymahloy.github.io/dictionary-app/"
											target="_blank"
										>
											Demo
										</a>
									</button>
									<button className={styles.button}>
										<a
											href="https://github.com/ploymahloy/dictionary-app"
											target="_blank"
										>
											Source
										</a>
									</button>
								</div>
							</fieldset>
						</div>
					</div>
					<div className={styles.row}>
						<div className={styles.project_summary_wrapper}>
							<fieldset className={styles.fieldset}>
								<legend className={styles.legend_project}>
									CLI Calculator
								</legend>
								<p className={styles.project_summary}>
									To break the mould of some of my other projects' workflow, I
									made a command line application that function as a simple
									calculator with a difficult personality. The technologies used
									for this project are:{' '}
									<p className={styles.project_summary_bold}>
										Typescript, Node
									</p>
								</p>
								<div className={styles.button_wrapper}>
									<button className={styles.button}>
										<a href="https://www.youtube.com/watch?v=gUpLU6GX3XY" target="_blank">
											Demo
										</a>
									</button>
									<button className={styles.button}>
										<a href="https://github.com/ploymahloy/cli-calculator" target="_blank">
											Source
										</a>
									</button>
								</div>
							</fieldset>
						</div>
					</div>
				</div>
			</Default>
		</>
	);
}
